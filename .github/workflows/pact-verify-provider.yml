name: Pact Verify Provider

on:
  workflow_dispatch:
    inputs:
      pact_url:
        type: string
        description: URL of pact to verify
        required: true
      provider:
        type: choice
        description: Provider nmae
        required: true
        options:
          - customers
          - frontend
          - order_history
          - orders

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      GIT_BRANCH_NAME: ${{ github.event.client_payload.branch }}
      GIT_COMMIT: ${{ github.event.client_payload.sha }}
      PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_BASE_URL }}
      PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
      PACT_PUBLISH_VERIFICATION_RESULTS: true
      PACT_URL: ${{ inputs.pact_url || github.event.client_payload.pact_url }}
      PACT_PROVIDER: ${{ inputs.provider || github.event.client_payload.provider }}
      POETRY_VIRTUALENVS_CREATE: false
      PYTHONPATH: src:$PYTHONPATH

    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.11']

    steps:
      - name: Checkout default branch (user run)
        uses: actions/checkout@v4
        if: ${{ inputs.pact_url }}

      - name: Checkout specific commit (webhook trigger)
        uses: actions/checkout@v4
        if: ${{ github.event.client_payload.pact_url }}
        with:
          ref: ${{ env.GIT_COMMIT }}

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry cache for Python dependencies
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_HOME="$HOME/.poetry" python - --yes
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Test Poetry installation
        run: poetry --version

      - name: Install dependencies
        run: |
          poetry install --no-interaction --with dev --all-extras
          poetry show --tree

      - name: Run Pact provider contract tests
        run: pytest -m "${{ env.PACT_PROVIDER }} and provider and pactflow"

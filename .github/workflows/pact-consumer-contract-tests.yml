name: Pact - Consumer Contract Tests

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
      PACT_BROKER_BASE_URL: ${{ secrets.PACT_BROKER_BASE_URL }}
      PACT_BROKER_TOKEN: ${{ secrets.PACT_BROKER_TOKEN }}
      PACT_PUBLISH_VERIFICATION_RESULTS: true
      POETRY_VIRTUALENVS_CREATE: false
      PYTHONPATH: src:$PYTHONPATH
    strategy:
      max-parallel: 1
      matrix:
        python-version: ['3.11']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Poetry cache for Python dependencies
        uses: actions/cache@v3
        if: startsWith(runner.os, 'Linux')
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: ${{ runner.os }}-poetry-

      - name: Install Pact Broker CLI
        run: |
          curl -fsSL https://raw.githubusercontent.com/pact-foundation/pact-ruby-standalone/master/install.sh | PACT_CLI_VERSION=v2.0.10 bash
          echo "$HOME/pact/bin/pact-broker" >> $GITHUB_PATH

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | POETRY_HOME="$HOME/.poetry" python - --yes
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH

      - name: Test Poetry installation
        run: poetry --version

      - name: Install dependencies
        run: |
          poetry install --no-interaction --with dev --all-extras
          poetry show --tree

      - name: Run Pact consumer contract tests
        run: pytest -m "consumer and pactflow"

      - name: Publish Pacts to PactFlow
        run: pact-broker publish --auto-detect-version-properties pacts

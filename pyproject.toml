[tool.poetry]
name = "src"
version = "0.0.0"
description = ""
authors = ["Filips Nastins <nastinsfilips@gmail.com>"]

[tool.poetry.dependencies]
python = ">=3.11,<3.12"
aiosqlite = "^0.19.0"
fastapi = "^0.104.0"
httpx = "^0.23.3"
jinja2 = "^3.1.2"
protobuf = "^4.24.4"
pydantic = "^2.6.0"
pydantic-settings = "^2.0.3"
sqlalchemy = { extras = ["postgresql-asyncpg"], version = "^2.0.22" }
stockholm = "^0.5.6"
strawberry-graphql = { extras = ["fastapi"], version = "^0.211.1" }
structlog = "^23.2.0"
tomodachi = "^0.26.1"
types-aiobotocore-dynamodb = "^2.7.0"
uvicorn = "^0.23.2"
uvloop = "^0.19.0"

[tool.poetry.group.dev.dependencies]
autoflake = ">=2.2.1"
bandit = ">=1.7.5"
black = ">=23.10.0"
flake8 = ">=6.1.0"
flake8-annotations = ">=3.0.1"
flake8-black = ">=0.3.6"
flake8-bugbear = ">=23.9.16"
flake8-executable = ">=2.1.3"
flake8-isort = ">=6.1.0"
flake8-junit-report = ">=2.1.0"
flake8-literal = ">=1.3.0"
flake8-no-pep420 = ">=2.7.0"
flake8-picky-parentheses = ">=0.5.3"
flake8-pyproject = ">=1.2.3"
flake8-pytest-style = ">=1.7.2"
flake8-return = ">=1.2.0"
flake8-simplify = ">=0.21.0"
flake8-use-pathlib = ">=0.3.0"
flake8-warnings = ">=0.4.1"
gitpython = "^3.1.40"
isort = ">=5.12.0"
mypy = ">=1.6.1"
mypy-protobuf = ">=3.5.0"
pact-python = ">=2.1.1"
pre-commit = ">=3.5.0"
pylint = ">=3.0.1"
pytest = ">=7.4.2"
pytest-asyncio = ">=0.21.1"
pytest-cov = ">=4.1.0"
pytest-env = ">=1.0.1"
pytest-mock = ">=3.12.0"
pytest-order = "^1.1.0"
ruff = ">=0.1.1"
tomodachi-testcontainers = ">=0.10.4"
types-protobuf = ">=4.24.0.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
hooks = "dev:hooks"
format = "dev:format"
lint = "dev:lint"
test = "dev:test"
test-ci = "dev:test_ci"

[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'
exclude = '\.git/|\.mypy_cache/|\.venv/|\.pytest_cache/|\.vscode/|__pycache__/|build/|dist/|proto/'

[tool.isort]
profile = "black"
line_length = 120
skip = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
    "proto",
]

[tool.bandit]
exclude_dirs = [
    "tests",
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
    "proto",
]

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true

[tool.flake8]
ignore = [
    "ANN101",
    "ANN102",
    "ANN401",
    "BLK100",
    "E501",
    "LIT101",
    "PL123",
    "W503",
]
literal-inline-quotes = "double"
literal-multiline-quotes = "double"
exclude = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
    "proto",
]

[tool.ruff]
target-version = "py311"
exclude = [
    ".git",
    ".ruff_cache",
    ".mypy_cache",
    ".venv",
    ".pytest_cache",
    ".vscode",
    "__pycache__",
    "build",
    "dist",
    "proto",
]
line-length = 120

[tool.pytest.ini_options]
log_level = "INFO"
env = [
    # Set dummy AWS credentials so that we don't accidentally mutate real infrastructure
    "AWS_DEFAULT_REGION=us-east-1",
    "AWS_ACCESS_KEY_ID=testing",
    "AWS_SECRET_ACCESS_KEY=testing",
    "AWS_SECURITY_TOKEN=testing",
    "AWS_SESSION_TOKEN=testing",
    # Service configuration
    "ENVIRONMENT=autotest",
    "AWS_REGION=us-east-1",
    "DYNAMODB_TABLE_NAME=autotest-table",
    "DATABASE_URL=sqlite+aiosqlite:///:memory:",
]
markers = [
    "customers__rest",
    "customers__sns",
    "frontend__graphql",
    "frontend__rest",
    "order_history__graphql",
    "order_history__sns",
    "orders__rest",
    "orders__sns",
    "consumer: Pact Consumer contract test",
    "provider: Pact Provider contract test",
    "pactflow: subset of tests running with PatcFlow; due to 5 integration limit in PactFlow free plan",
]
